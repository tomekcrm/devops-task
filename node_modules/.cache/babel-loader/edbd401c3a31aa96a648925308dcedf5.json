{"ast":null,"code":"import Big from\"big.js\";import operate from\"./operate\";import isNumber from\"./isNumber\";/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */export default function calculate(obj,buttonName){if(buttonName===\"AC\"){return{total:null,next:null,operation:null};}if(isNumber(buttonName)){if(buttonName===\"0\"&&obj.next===\"0\"){return{};}// If there is an operation, update next\nif(obj.operation){if(obj.next){return{next:obj.next+buttonName};}return{next:buttonName};}// If there is no operation, update next and clear the value\nif(obj.next){var next=obj.next===\"0\"?buttonName:obj.next+buttonName;return{next:next,total:null};}return{next:buttonName,total:null};}if(buttonName===\"%\"){if(obj.operation&&obj.next){var result=operate(obj.total,obj.next,obj.operation);return{total:Big(result).div(Big(\"100\")).toString(),next:null,operation:null};}if(obj.next){return{next:Big(obj.next).div(Big(\"100\")).toString()};}return{};}if(buttonName===\".\"){if(obj.next){// ignore a . if the next number already has one\nif(obj.next.includes(\".\")){return{};}return{next:obj.next+\".\"};}return{next:\"0.\"};}if(buttonName===\"=\"){if(obj.next&&obj.operation){return{total:operate(obj.total,obj.next,obj.operation),next:null,operation:null};}else{// '=' with no operation, nothing to do\nreturn{};}}if(buttonName===\"+/-\"){if(obj.next){return{next:(-1*parseFloat(obj.next)).toString()};}if(obj.total){return{total:(-1*parseFloat(obj.total)).toString()};}return{};}// Button must be an operation\n// When the user presses an operation button without having entered\n// a number first, do nothing.\n// if (!obj.next && !obj.total) {\n//   return {};\n// }\n// User pressed an operation button and there is an existing operation\nif(obj.operation){return{total:operate(obj.total,obj.next,obj.operation),next:null,operation:buttonName};}// no operation yet, but the user typed one\n// The user hasn't typed a number yet, just save the operation\nif(!obj.next){return{operation:buttonName};}// save the operation and shift 'next' into 'total'\nreturn{total:obj.next,next:null,operation:buttonName};}","map":{"version":3,"names":["Big","operate","isNumber","calculate","obj","buttonName","total","next","operation","result","div","toString","includes","parseFloat"],"sources":["/var/www/react/react/node_modules/calculator/src/logic/calculate.js"],"sourcesContent":["import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === \"%\") {\n    if (obj.operation && obj.next) {\n      const result = operate(obj.total, obj.next, obj.operation);\n      return {\n        total: Big(result)\n          .div(Big(\"100\"))\n          .toString(),\n        next: null,\n        operation: null,\n      };\n    }\n    if (obj.next) {\n      return {\n        next: Big(obj.next)\n          .div(Big(\"100\"))\n          .toString(),\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === \"+/-\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}